GMT命令之xyz2grd生成网格数据
############################

:date: 2013-09-28 00:31
:author: SeisMan
:category: GMT
:tags: GMT命令, 数据, 网格, GMT4
:slug: gmt-xyz2grd

.. contents::

语法
====

::

    xyz2grd xyzfile -Ggrdfile -Ixinc[unit][=|+][/yinc[unit][=|+]]
        -Rwest/east/south/north[r] [ -A[n|z|u|l] ]
        [ -Dxname/yname/zname/scale/offset/title/remark ] [ -E[nodata] ] [ -F ]
        [ -H[i][nrec] ] [ -Nnodata ] [ -S[zfile] ] [ -V ] [ -Z[flags] ] [ -:[i|o] ]
        [ -bi[s|S|d|D[ncol]|c[var1/...]] ] [ -fcolinfo ]

文件格式
========

该命令的功能是将table文件转换为grid文件。

grid文件
--------

网格文件的最大特色在于区域的\ **等间隔**\ 网格划分，网格的横向间隔和纵向间隔可以不同。网格化之后的每个点称为一个node。网格文件存储的是区域内每个node处的z值。因而给定区域的范围以及横向间隔和纵向间隔之后，就可以知道网格文件中包含的node数。

table文件
---------

table文件可以分为两种：

-  xyz文件：文件中包含了(x,y,z)值对，其中(x,y)指定区域内的任意一点，z为该点的值；最常见的table文件格式是ASCII格式，即三列数据；也可以是二进制格式（需要使用-bi选项，不过一般二进制的xyz table文件不太常用）。注意xyz文件与grid文件最大的区别是：xyz数据不一定要等间隔分布，\ **(x,y)并不一定要位于网格点上！**\ 这意味着一个node上可以有多个(x,y,z)记录，或者没有记录，xyz数据不一定要按照顺序排列。当然最理想的情况是xyz数据是等间隔分布的。
-  z文件：文件中只包含z值，没有(x,y)值。z文件必须是等间隔分布的，且每个点都必须有且只有一个值，数据必须按照一定的顺序排序（-Z选项指定数据格式）；当然z文件可以是ASCII格式或者二进制格式；

选项说明
========

常用选项
--------

-  **-G：**\ 要输出的网格文件名。一般给定网格文件名就可以，也可以加入进一步指定网格数据的格式，具体参考GMT Manual的网格数据文件格式；
-  **-I：**\ 指定网格的x间隔和y间隔；默认单位为度，其他单位包括m（弧分）、c（弧秒）、e（米）、k（千米）、i（英里）、n（海里）。若没有指定y\_inc，则GMT自动计算y\_inc，若指定y\_inc=0，则设置y\_inc=x\_inc；x\_inc后加“=”表示允许GMT对间隔进行微调以符合要求；x\_inc后加“+”表示给出的x\_inc不是网格间隔，而是x方向的数据点数。对于y\_inc同理。
-  **-R：**\ 指定要研究的区域范围；要研究的区域范围不一定要与xyz文件的范围相等！也可以用-Rgrdfile指定某个网格文件，所需要的区域范围从网格文件中直接提取。

不常用选项
----------

-  **-A：**\ 如果某node有多个值，默认会将多个值的平均值作为该node的z值；该选项可以对多值问题进行特殊处理。-A或-Az将多个值的和作为该node的值；-An会将该node的数据点数作为该node的值（算是某种意义上的统计！）；-Al和-Au会将多个值中的最小/大值作为该node的值。
-  **-D：**\ 给定网格文件的xname, yname, zname, scale, offset, title, and remark，这相当于给网格文件加入了一些头段信息；
-  **-E：**\ 将ESRI ArcInfo ASCII interchange网格文件转换为GMT可读的文件格式。
-  **-F：**\ 设置网格为pixel node registration；默认为gridline registration；
-  **-Nnodata：**\ 对于无值的node，默认设置为NaN；该选项可以指定无值的node的值为nodata；对于z数据，若某node的值为nodata，则将其转换为NaN；
-  **-Szfile：**\ 仅对数据进行字节序交换，不产生网格文件；输出到z数据zfile中；
-  **-H、-V、-：、-bi、-f：**\ GMT标准选项；

特殊选项
--------

-Z选项是处理z数据时必须的选项。z数据必须等间隔分布、所有node必须有值、数据必须按照一定规律排序。-Zflags中的flags指定z数据的具体格式。

根据GMT的一般定义，对于一个区域来说，由左到右为x轴增加方向，由下到上为y轴增加方向。网格数据可以以四个顶点中的任意一个为起点，对于每个顶点有两个方向可以选择，因而总共有八种情况，用Top、Bottom、Left、Right来表示如下：

行优先：

-  TL：第一点为左上角；
-  TR：第一点为右上角；
-  BL：第一点为左下角；
-  BR：第一点为右上角；

列优先：

-  LT：第一点为左上角；
-  RT：第一点为右上角；
-  LB：第一点为左下角；
-  RB：第一点为右上角；

对于gridline registered网格数据，若数据是周期性的(比如经度的0度和360度实际上是一个点)，但是输入数据不包含xmax处的值，则要加入"x"；对于y方向同理；

加入\ **s**\ n可以跳过z数据的前几个记录（在z数据有头段的时候经常用到）；若需要交换字节序，则加入"w"；

还需要指定z数据的具体数据类型：

-  A：数据为ASCII格式，每行包含一个或多个浮点型数据；
-  a：数据为ASCII格式，每行一个数据；
-  c：有符号 1-byte 字符；
-  u：无符号 1-byte 字符；
-  h：short整型；2字节；
-  i：4字节整型；
-  l：长整型；（4或8字节，与机器构架有关）；
-  f：4字节单精度float型；
-  d：8字节double型；

默认值为-ZTLa。

例子
====

将一个ASCII格式的三列数据文件转换成网格文件，数据区域范围已知，数据文件等间隔且已知：

::

    xyz2grd hawaii_grv.xyz -Ghawaii_grv_new.nc -R198/208/18/25 -I5m -V

将常见的二进制高程数据转换为网格文件，常见的用法是：

::

    xyz2grd topo30. -Dm/m/m/1/0/=/= -Gustopo.nc -R234/294/24/50 -I30s -N-9999 -B -ZTLhw

注意事项
========

**Q1：**\ 若xyz数据不等间隔，该如何转换？

**A1：**\ 从源代码中可以看出，xyz2grd会将任意一点(x,y)的值赋给离其最近的node，如果(x,y)恰好在node上，直接赋值；如果(x,y)不在node上，则会引起误差。\ **注意这种误差是由于错误赋值而不是插值导致的。**\ xyz2grd不要求数据等间隔分布，但是对于不等间隔分布的数据，建议用surface命令进行插值转换。

**Q2：**\ 若使用等间距xyz数据或者z数据，如何选择合适的-I？

**A2：**\ 等间隔xyz数据和z数据都是很好的网格化数据。

- 若-I指定的网格间隔与输入数据的网格间隔相同，则生成的网格数据没有任何误差；
- 若-I指定的间隔为输入数据网格间隔的整数倍，xyz2grd不是对数据直接进行减采样而是将网格点周围的一些数据进行求和平均，这也会引起一些误差（这个误差应该可以接受）；
- 若-I指定的间隔小于输入数据网格间隔，则很多node处会被插值或者直接为NaN，一般都不会这样做。

**Q3：**\ 若使用等间距xyz数据或者z数据，如何选择合适的-R？

**A3：**-R指定的范围是感兴趣的范围，可以比输入数据的范围要小。假定-I指定的网格间隔与输入数据的网格间隔相同，-Rwest/east/south/north给定的网格点应该恰好与输入数据中的点吻合，否则会导致数据的整体偏移。

Private Notes
=============

.. code-block:: c

 GMT 4.5.9/src/xyz2grd.c:
 L538-L575：读取xyz数据；
 L553：ii = GMT_x_to_i (in[GMT_X], grd.x_min, grd.x_inc, grd.xy_off, grd.nx);
 gmt_grd.h：#define GMT_x_to_i(x,x0,dx,off,nx) ((GMT_LONG)irint(((((x) - (x0)) / (dx)) - (off))))
