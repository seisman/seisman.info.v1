fk用法笔记
##########

:author: SeisMan
:date: 2015-02-28
:category: 地震学软件
:tags: 理论地震图
:slug: fk-notes
:depends: mathjax

.. contents::

简介
====

fk是Prof. Lupei Zhu写的一个用于计算\ **水平分层模型**\ 下的理论格林函数并合成理论地震图的代码包。代码是开源的，可以直接编译使用。

代码中包含了如下几个重要的命令/脚本：

- ``fk`` ：用于计算格林函数的主程序；
- ``st_fk`` ：用于计算静态格林函数的主程序；
- ``trav`` ：用于计算P、S初至到时的辅助程序；
- ``sachd`` ：用于修改SAC头段的辅助程序；
- ``fk.pl`` ：对 ``fk`` 、 ``st_fk`` 、 ``trav`` 和 ``sachd`` 的封装，一般情况下直接使用 ``fk.pl`` 脚本即可；
- ``syn`` ：用于将格林函数合成为理论地震图三分量的程序；

因而，实际操作的时候，只需要调用 ``fk.pl`` 生成格林函数，再调用 ``syn`` 将格林函数合成为三分量地震图即可。

相关文献
========

#. Haskell (1964), BSSA
#. Wang and Herrmann (1980), BSSA
#. Takeuchi and Saito (1972), Methods in Computational Physics
#. Zhu and Rivera (2002), GJI

建议的阅读方式：

- 若想了解 ``fk.pl`` 中每个选项的含义，阅读Zhu and Rivera (2002)以及本文就差不多了；
- 若想理解代码的实现细节，则需要在Zhu and Rivera (2002)的基础上，阅读其余三篇文章，至少要阅读Haskell (1964)。

需要注意的一点是，这几篇文献虽然说的都是同一种方法，但在很多东西的定义上是有区别的，所以在推导代码中的公式时应以Zhu and Rivera (2002)为准。Zhu and Rivera (2002)区别于前面其他文献的地方主要在于，重新定义了传播矩阵，并将静态解与动态解统一到同一个公式中。

基础原理
========

这里不涉及算法的细节，只介绍一些基础的东西。

根据Zhu and Rivera (2002)，在定义了柱坐标系之后，位移可以表示为：

.. figure:: /images/2015022801.png
   :width: 500 px
   :align: center
   :alt: displacement

公式中涉及到了一个求和与两个积分：

- 对频率的积分，本质上就是一个反傅里叶变换，技术上很成熟了，可以不管
- 对m的求和，其实是对方位角模数的求和，理论上是要从零求和到无穷的。但是由于震源的简单性，只需要对几项做求和即可，具体的求和数目由震源类型决定：

  - 爆炸源：m=0
  - 单力源：m=0, 1
  - 双力偶：m=0, 1, 2

- 对k的积分是一个难点，只能进行数值积分，由于积分核 :math:`U_z R_m^k + U_r S_m^k + U_{\theta} T_m^k` 比较复杂，在做数值积分的时候就需要更多的考虑。

积分核 :math:`U_z R_m^k + U_r S_m^k + U_{\theta} T_m^k` 中R、S、T是柱坐标下的基矢量，由一堆Bessel函数组成，已知。该算法中的一大堆数学推导以及细节都是为了求出Uz、Ur和Ut。具体Uz、Ur和Ut怎么求，不是本文的重点，需要了解的只能自己推公式。

使用说明
========

先把用法贴在这里作为参考::

    fk.pl -Mmodel/depth[/f_or_k] [-D] [-Hf1/f2] [-Nnt/dt/smth/dk/taper]
        [-Ppmin/pmax[/kmax]] [-Rrdep] [-SsrcType] [-Uupdn] [-Xcmd] distances

速度模型
--------

``-Mmodel/depth/k_or_f`` 中的 ``model`` 为模型文件名， ``k`` 和 ``f`` 的作用在下面会解释。

格式
~~~~

fk的输入速度模型是一维水平分层速度模型，其格式为::

    thickness vs vp/vs [rho Qs Qp]

或::

    thickness vs vp [rho Qs Qp]

其中

- 列1：该层的厚度（km）
- 列2：S波速度（km/s）
- 列3：波速比或P波速度
- 列4：密度（ :math:`g/cm^3` ）
- 列5：S波的Q值
- 列6：P波的Q值

其中前三列是必须的，若未指定密度，则使用经验公式 ``rho=0.77+0.32*vp`` ；若未指定Qs，则取Qs=500；若未指定Qp，则取Qp=2*Qs。

关于k和f
~~~~~~~~

- 若命令行中使用 ``-Mmodel/depth`` ，则表示输入模型为第二种格式；
- 若命令行中使用 ``-Mmodel/depth/k`` ，则表示输入模型使用第一种格式，即第三列是波速比；
- 若命令行中使用 ``-Mmodel/depth/f`` ，则表示需要对速度模型做展平变换，当震中距较大时需要这样做；

备注
~~~~

- ``fk.pl`` 的输入模型是先Vs再Vp，而 ``fk.pl`` 在调用 ``fk`` 时使用的模型是先Vp后Vs，注意不要搞混；
- 若第一层的厚度为零，则该行指定了上半空间的参数；
- 若第一层的厚度不为零，则上半空间为真空，该层给出了地表下方第一层的参数；
- 最后一层会被自动当做下半无限半空间，并修改其厚度为0；
- 对于液态层（如海水和外核）：

  - S波速度可以用零表示，程序中用自动用0.0001替换零值；
  - Qs值不可以取为零，应取某小值；

震源
----

震源深度
~~~~~~~~

震源深度由 ``-Mmodel/depth/[f_or_k]`` 中的 ``depth`` 指定。

需要注意，震源深度不能位于速度模型的分界面上，即震源的深度必须位于模型某层的内部。

大多数计算理论地震图的方法都会有这样的限制，因为在计算过程中会用到震源所在层的速度或密度，若震源位于速度模型的分界面上，则会出现参数的间断。

震源类型
~~~~~~~~

fk中用 ``-SsrcType`` 指定震源类型，其中 ``srcType`` 可以取如下三个值：

- 0：爆炸源；
- 1：单力源；
- 2：双力偶源；

台站
----

台站深度
~~~~~~~~

``-Rrdep`` 中 ``rdep`` 用于设置receiver的深度，默认值为零，即台站位于地表。

需要注意，fk中要求震源和台站不能位于同一深度。代码中，会计算震源和台站之间的深度差hs，并将其作为分母。但这一限制的本质原因尚不清楚。

台站震中距
~~~~~~~~~~

``fk.pl`` 命令行中可以指定多个震中距，震中距的默认单位为km。

当震中距较大时，以km做单位很不方便，此时可以使用 ``-D`` 选项，表明震中距的单位为度。同时，由于震中距比较大，此时可能还需要对速度模型做展平变换。

时间序列
--------

说说 ``-Nnt/dt/smth/dk/taper`` 中的nt、dt和smth。

采样间隔
~~~~~~~~

``dt`` 即生成的格林函数的采样间隔。与此同时，``dt`` 决定了fk要计算的最高频率，其公式为

.. math::

   f_{max} = \frac{1}{2 dt}

即fk生成的格林函数的最高频率是由 ``dt`` 决定的Nyquist采样率。

因而，一般来说，要首先根据自己的实际需求，确定所需要的最高频率，进而决定 ``dt`` 。

数据点数
~~~~~~~~

nt即数据点数，nt的选择有一些需要注意的地方：

- nt必须为2的n次方，即可以取1、2、256、512、1024等，程序中限制了最大取值为8192；

  - nt=1，则调用 ``st_fk`` 直接计算静态位移解；
  - nt=2，则调用 ``fk`` 计算零频位移，等效于静态位移解；
  - nt必须为2的n次方是因为在FFT时数据点为2的n次方时有快速算法；

- :math:`T=nt*dt` 确定了最终数据的总长度

smooth因子
~~~~~~~~~~

由于dt决定了fk计算的最高频率，所以dt是不能随便取的。比如需要最高频率为2.5Hz，则dt应取0.2s，但是若希望最终生成的数据的采样间隔为0.05s，则需要 ``smth`` 这个参数。

在程序中，smth做了两件事情：

#. 将dt除以smth；
#. 将总数据点数乘以smth；

总的效果应该相当于对计算结果做了一个插值，这也可以通过SAC的插值命令来完成。在程序实现时，实际上就是在反傅里叶变换之前，给数据的高频部分补上更多的零值。

同样由于快速傅里叶算法的限制， ``smth`` 也必须取2的n次方。

频率
----

最高频率
~~~~~~~~

前面已经说到，fk所计算的最高频率由 ``dt`` 决定：

.. math::

   f_{max} = \frac{1}{2 dt}

频率间隔
~~~~~~~~

频率域的采样间隔（分辨率）为 :math:`df=\frac{1}{T}=\frac{1}{nt*dt}`

高通滤波
~~~~~~~~

fk会从零频开始，以 ``df`` 为频率间隔，一直到最高频率 ``fmax`` ，计算每个离散频率处的值。

比如，给定参数dt=0.1，npts=1024，则fk计算的最高频率为5 Hz，频率间隔df约等于0.01Hz。因而fk会计算0 Hz、0.01 Hz、0.02 Hz一直到5 Hz的值，共计循环512次。

有些情况下，比较低频的信息是没有用的，所以可以不必计算，这样循环可以进一步减小，以加速计算。

``-Hf1/f2`` 中， ``f1`` 限定了循环过程中频率的下限，即对频率的循环会从 ``f1`` 开始计算到 ``fmax`` 而不是从零开始，这本质上是一个高通滤波器。

这样一来，fk会计算频率在f1和fmax之间的值，对于小于f1以及大于fmax的频率段，其值直接设为零。这实际上是在频率域直接截断，似乎会出现一些问题，所以一般都会对频率的两端做尖灭处理，即f2和taper。程序会在f1和f2之间以及(1-taper)*fmax和fmax之间分别加上余弦窗。

taper的默认值为0.3，所以当dt=0.1s时，fmax=5Hz，则在3.5Hz到5Hz之间会加上余弦窗，此时数据的频段上限是5Hz还是3.5Hz呢？这是个疑问。


k积分
-----

k是什么
~~~~~~~

这里的k不是波数，而是水平波数：

.. math::

   k = k_x = \vec{k}\cdot \vec{x} = \frac{\omega}{v} \sin \theta = \omega p

其中， :math:`\theta` 是射线与垂直方向的夹角， :math:`p=\frac{\sin \theta}{v}` 是水平慢度，也就是射线参数。

下限和上限
~~~~~~~~~~

``-Ppmin/pmax[/kmax]`` 可以限定k积分的上下限。其中 ``pmin`` 确定了k积分的下限：

.. math::

   k_{min} = \omega pmin

``pmax`` 和 ``kmax`` 决定了k积分的上限：

.. math::

   k_{max} = \sqrt{kmax^2+\omega pmax}

说明：

#. pmin和pmax的取值范围是0到1，代码中会将pmin和pmax都除以震源处的S波速度。
#. 程序中 ``kmax=kmax/hs`` ，其中hs是震源与台站的深度差；由于积分核在零频处以exp(-k*hs)的速度随着k衰减，因而要求kmax>10，以保证求和足够多。
#. 指定了pmin和pmax，就相当于指定了射线参数的范围，或射线出射角度的范围，似乎可以用于筛选中特定射线参数范围的射线；
#. 为什么pmin和pmax在程序中都要除以S波速度呢？这样当给定 :math:`pmin=\sin 30=0.5` 时，以30度角出射的S波会被计算，而以30度角出射的P波则不会被计算？这样对吗？
#. pmin和pmax的取值为0到1，为什么不是-1到1？也许正负号是由 ``updn`` 决定的。

上行和下行
~~~~~~~~~~

``-Uupdn`` 选项可以指定是计算全波场还是只计算上行波或下行波。 ``updn`` 可以取值如下：

- 0：计算全波场；也是默认值；
- 1：仅计算下传波场；
- -1：仅计算下传波场；

该参数取不同的值，会影响到程序内部的一些公式。具体的原理可能需要推公式才能理解。

dk
~~

dk用于控制k积分的积分间隔。程序中 :math:`dk=dk*PI/max(x,hs)` ，其中hs为震源与台站的深度差，x为震中距，因而k积分间隔实际上是与要计算的最大震中距有关的。

由于积分核中J(kx)在大震中距时按2pi/x的周期震荡，因而要求dk小于0.5，以保证每个周期内至少有四个采样点。官方建议取值为0.1到0.4。dk理论上越小越好，当然dk越小计算就会越慢。

振幅压制
--------

这个参数在 ``fk.pl`` 脚本内部可以修改，但是在命令行里没法修改。

对于实序列 :math:`f(t)` ，其傅里叶变换为:

.. math::

   F(\omega) = \int f(t) e^{-i\omega t} dt

若将该实序列f(t)乘以 :math:`e^{-\sigma t/T}`\ ，即 :math:`g(t)=f(t)e^{-\sigma t/T}`\ 的傅里叶变换为：

.. math::

   G(\omega) = \int g(t) e^{-i\omega t} dt = \int f(t) e^{-\sigma t/T} e^{-i\omega t} dt
             = \int f(t) e^{-i(\omega-i\sigma/T)} dt
             = F(\omega-i\sigma/T)

因而，在频率域将 :math:`\omega` 减去 :math:`i\sigma/T` ，相当于对实序列乘以 :math:`e^{-\sigma t/T}` 。

其中T为实序列的总时间长度，sigma称为压制因子，用于降低数据尾部的振幅值，而最终反傅里叶变换得到的实序列，会再次乘以 :math:`e^{+\sigma t/T}` ，以消除压制因子对振幅的影响。所以，理论上看，sigma没什么实际用途，这样处理的具体目的还不清楚，似乎是出于频率域的稳定性考虑的。

DEBUG
-----

fk提供了 ``-X`` 选项用于debug，最常见的用法是 ``-Xcat`` ，此时fk.pl中 ``cmd`` 被替换成 ``cat`` 命令，即将所有的输入都传递给 ``cat`` 命令，这样可以很清楚地知道要传递的数据是否正确，方便debug。

其他说明
========

#. 对于PREM模型，震源深度取15km，震中距为5度，做不做展平变换，震相的走时差大概在0.8s左右
#. 将PREM模型离散成每层20km或50km，计算出的结果差异不大
#. 若台站深度大于震源深度，则会对模型做翻转，程序中的部分参数乘以-1；
#. ``fk.f`` 中输入的 ``src_layer`` 表示震源位于第 ``src_layer`` 层的顶部， ``rcv_layer`` 同理；而 ``trav`` 中 ``src_layer`` 表示震源位于第 ``src_layer`` 的底部；

格林函数
========

fk将生成的格林函数以SAC格式写到磁盘中。

爆炸源
------

生成三个分量，命名为 ``xxxx.[a-c]`` ，分别是Z、R、T向的格林函数。其单位为 ``10^-20 cm/(dyne cm)`` 。

单力源
------

生成六个分量，其中：

- ``xxxx.[0-2]`` ：m=0对应的ZRT格林函数，等效于垂直单力产生的位移三分量；
- ``xxxx.[3-6]`` ：m=1对应的ZRT格林函数，等效于水平单力产生的位移三分量；

格林函数的单位为 ``10^-15 cm/dyne`` 。

双力偶
------

生成九个分量，其中

- ``xxx.[0-2]`` ：m=0阶源生成的ZRT格林函数，相当于45-down-dip(DD)双力偶源在45度方位角处产生的位移，并乘以（-2,-2,0）
- ``xxx.[3-5]`` ：m=1阶源生成的ZRT格林函数，相当于dip-slip(DS)双力偶源在45度方位角处产生的位移，并乘以 :math:`-\sqrt 2`
- ``xxx.[6-8]`` ：m=2阶源生成的ZRT格林函数，相当于strike-slip(SS)双力偶源在22.5度方位角处产生的位移，并乘以 :math:`-\sqrt 2`

格林函数的单位为 ``10^-20 cm/(dyne cm)`` 。

说明
----

在大多数教程以及文献中，任意一个双力偶源可以表示为三个基本断层的线性迭加。这三个基本断层分别为DD、DS和SS。有些计算格林函数的代码会计算出三种基本断层的位移解，然后根据文献中给出的辐射花样系数进行合成。而fk计算出的是m=0、1、2时的位移解，虽然这三者分别与DD、DS、SS在某个特定方位角的位移解有关系。因而在对fk生成的格林函数进行合成时，有专门的辐射花样系数，参见Zhu  and Rivera(2002)的附录B10-B12。

输出类型
========

``fk`` 计算得到的格林函数究竟是什么物理量呢？是位移还是速度？

在Zhu and Rivera (2002)的文章中、代码中的注释以及说明文档等多个地方都提到fk计算出的是位移量，而实际上利用 ``fk`` 和 ``syn`` 计算出来的合成地震图是速度场。

Zhu and Rivera (2002)的附录B中给出了不同震源类型以及不同m值所对应的source term，这里的source term代表了震源引起的位移-应力不连续。source term是一个与频率无关的常数，所以fk中所使用的source term在时间域上的脉冲源。（时间域上的脉冲函数，在频率域是一个常数，所以fk中在频率域加了一个常数的source term，实际上相当于在时间域上加上脉冲源。）

因而，fk实际上计算的是脉冲源对应的位移场，其等效于阶跃函数所产生的速度场。（阶跃函数的偏导即脉冲函数。）

对于一个真实的小震级的简单地震而言，其震源时间函数可以认为是一个阶跃函数，震源时间函数的偏导就是脉冲函数。因而fk计算出的格林函数实际上是速度场，在使用 ``syn`` 合成真实数据时，如果使用 ``-D`` 选项指定了一个三角震源函数（近似的脉冲函数），得到的合成数据都是速度场。

疑问
====

#. 在考虑衰减时，Aki and Richard(1980)的公式(5.88)中给出的公式中虚数前为负号，而fk代码中为正号。Why？
#. 如何从数学或物理上详细解释 ``sigma`` 的含义？
